// Generated by view binder compiler. Do not edit!
package com.example.arnavigationapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.arnavigationapp.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HomePageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView RegisterCardView;

  @NonNull
  public final TextView RegisterText;

  @NonNull
  public final TextView RegisterToSignInButton;

  @NonNull
  public final CardView SignInCardView;

  @NonNull
  public final TextView SignInToRegisterButton;

  @NonNull
  public final ConstraintLayout backGround;

  @NonNull
  public final TextView buttonHomepageFromLogin;

  @NonNull
  public final TextView buttonHomepageFromRegister;

  @NonNull
  public final Button buttonLogin;

  @NonNull
  public final Button buttonRegister;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final Button confirmLogin;

  @NonNull
  public final Button confirmRegister;

  @NonNull
  public final TextInputLayout emailTextInput;

  @NonNull
  public final TextView loginError;

  @NonNull
  public final TextView passError;

  @NonNull
  public final TextInputLayout passwordTextInput;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextInputLayout regConfirmPasswordTextInput;

  @NonNull
  public final TextInputLayout regEmailTextInput;

  @NonNull
  public final TextView regError;

  @NonNull
  public final TextInputLayout regPasswordTextInput;

  @NonNull
  public final TextView registerText;

  @NonNull
  public final TextView signInText;

  @NonNull
  public final TextView welcomeText;

  private HomePageBinding(@NonNull ConstraintLayout rootView, @NonNull CardView RegisterCardView,
      @NonNull TextView RegisterText, @NonNull TextView RegisterToSignInButton,
      @NonNull CardView SignInCardView, @NonNull TextView SignInToRegisterButton,
      @NonNull ConstraintLayout backGround, @NonNull TextView buttonHomepageFromLogin,
      @NonNull TextView buttonHomepageFromRegister, @NonNull Button buttonLogin,
      @NonNull Button buttonRegister, @NonNull CardView cardView, @NonNull Button confirmLogin,
      @NonNull Button confirmRegister, @NonNull TextInputLayout emailTextInput,
      @NonNull TextView loginError, @NonNull TextView passError,
      @NonNull TextInputLayout passwordTextInput, @NonNull ProgressBar progressBar,
      @NonNull TextInputLayout regConfirmPasswordTextInput,
      @NonNull TextInputLayout regEmailTextInput, @NonNull TextView regError,
      @NonNull TextInputLayout regPasswordTextInput, @NonNull TextView registerText,
      @NonNull TextView signInText, @NonNull TextView welcomeText) {
    this.rootView = rootView;
    this.RegisterCardView = RegisterCardView;
    this.RegisterText = RegisterText;
    this.RegisterToSignInButton = RegisterToSignInButton;
    this.SignInCardView = SignInCardView;
    this.SignInToRegisterButton = SignInToRegisterButton;
    this.backGround = backGround;
    this.buttonHomepageFromLogin = buttonHomepageFromLogin;
    this.buttonHomepageFromRegister = buttonHomepageFromRegister;
    this.buttonLogin = buttonLogin;
    this.buttonRegister = buttonRegister;
    this.cardView = cardView;
    this.confirmLogin = confirmLogin;
    this.confirmRegister = confirmRegister;
    this.emailTextInput = emailTextInput;
    this.loginError = loginError;
    this.passError = passError;
    this.passwordTextInput = passwordTextInput;
    this.progressBar = progressBar;
    this.regConfirmPasswordTextInput = regConfirmPasswordTextInput;
    this.regEmailTextInput = regEmailTextInput;
    this.regError = regError;
    this.regPasswordTextInput = regPasswordTextInput;
    this.registerText = registerText;
    this.signInText = signInText;
    this.welcomeText = welcomeText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HomePageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HomePageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.home_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HomePageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.RegisterCardView;
      CardView RegisterCardView = ViewBindings.findChildViewById(rootView, id);
      if (RegisterCardView == null) {
        break missingId;
      }

      id = R.id.Register_text;
      TextView RegisterText = ViewBindings.findChildViewById(rootView, id);
      if (RegisterText == null) {
        break missingId;
      }

      id = R.id.Register_To_SignIn_button;
      TextView RegisterToSignInButton = ViewBindings.findChildViewById(rootView, id);
      if (RegisterToSignInButton == null) {
        break missingId;
      }

      id = R.id.SignInCardView;
      CardView SignInCardView = ViewBindings.findChildViewById(rootView, id);
      if (SignInCardView == null) {
        break missingId;
      }

      id = R.id.SignIn_To_register_button;
      TextView SignInToRegisterButton = ViewBindings.findChildViewById(rootView, id);
      if (SignInToRegisterButton == null) {
        break missingId;
      }

      ConstraintLayout backGround = (ConstraintLayout) rootView;

      id = R.id.button_homepage_from_login;
      TextView buttonHomepageFromLogin = ViewBindings.findChildViewById(rootView, id);
      if (buttonHomepageFromLogin == null) {
        break missingId;
      }

      id = R.id.button_homepage_from_register;
      TextView buttonHomepageFromRegister = ViewBindings.findChildViewById(rootView, id);
      if (buttonHomepageFromRegister == null) {
        break missingId;
      }

      id = R.id.buttonLogin;
      Button buttonLogin = ViewBindings.findChildViewById(rootView, id);
      if (buttonLogin == null) {
        break missingId;
      }

      id = R.id.buttonRegister;
      Button buttonRegister = ViewBindings.findChildViewById(rootView, id);
      if (buttonRegister == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.confirm_login;
      Button confirmLogin = ViewBindings.findChildViewById(rootView, id);
      if (confirmLogin == null) {
        break missingId;
      }

      id = R.id.confirm_register;
      Button confirmRegister = ViewBindings.findChildViewById(rootView, id);
      if (confirmRegister == null) {
        break missingId;
      }

      id = R.id.email_text_input;
      TextInputLayout emailTextInput = ViewBindings.findChildViewById(rootView, id);
      if (emailTextInput == null) {
        break missingId;
      }

      id = R.id.login_error;
      TextView loginError = ViewBindings.findChildViewById(rootView, id);
      if (loginError == null) {
        break missingId;
      }

      id = R.id.pass_error;
      TextView passError = ViewBindings.findChildViewById(rootView, id);
      if (passError == null) {
        break missingId;
      }

      id = R.id.password_text_input;
      TextInputLayout passwordTextInput = ViewBindings.findChildViewById(rootView, id);
      if (passwordTextInput == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.reg_confirm_password_text_input;
      TextInputLayout regConfirmPasswordTextInput = ViewBindings.findChildViewById(rootView, id);
      if (regConfirmPasswordTextInput == null) {
        break missingId;
      }

      id = R.id.reg_email_text_input;
      TextInputLayout regEmailTextInput = ViewBindings.findChildViewById(rootView, id);
      if (regEmailTextInput == null) {
        break missingId;
      }

      id = R.id.reg_error;
      TextView regError = ViewBindings.findChildViewById(rootView, id);
      if (regError == null) {
        break missingId;
      }

      id = R.id.reg_password_text_input;
      TextInputLayout regPasswordTextInput = ViewBindings.findChildViewById(rootView, id);
      if (regPasswordTextInput == null) {
        break missingId;
      }

      id = R.id.register_text;
      TextView registerText = ViewBindings.findChildViewById(rootView, id);
      if (registerText == null) {
        break missingId;
      }

      id = R.id.sign_in_text;
      TextView signInText = ViewBindings.findChildViewById(rootView, id);
      if (signInText == null) {
        break missingId;
      }

      id = R.id.welcome_text;
      TextView welcomeText = ViewBindings.findChildViewById(rootView, id);
      if (welcomeText == null) {
        break missingId;
      }

      return new HomePageBinding((ConstraintLayout) rootView, RegisterCardView, RegisterText,
          RegisterToSignInButton, SignInCardView, SignInToRegisterButton, backGround,
          buttonHomepageFromLogin, buttonHomepageFromRegister, buttonLogin, buttonRegister,
          cardView, confirmLogin, confirmRegister, emailTextInput, loginError, passError,
          passwordTextInput, progressBar, regConfirmPasswordTextInput, regEmailTextInput, regError,
          regPasswordTextInput, registerText, signInText, welcomeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
