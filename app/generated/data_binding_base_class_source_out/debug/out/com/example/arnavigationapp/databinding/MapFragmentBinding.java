// Generated by view binder compiler. Do not edit!
package com.example.arnavigationapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.arnavigationapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MapFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView addPlaceOnMap;

  @NonNull
  public final TextView btnBack;

  @NonNull
  public final Button buttonFichmanGate;

  @NonNull
  public final Button buttonGolombGate;

  @NonNull
  public final Button buttonHoffinGate;

  @NonNull
  public final Button buttonaguda;

  @NonNull
  public final Button buttonbuilding1;

  @NonNull
  public final Button buttonbuilding2;

  @NonNull
  public final Button buttonbuilding3A;

  @NonNull
  public final Button buttonbuilding3B;

  @NonNull
  public final Button buttonbuilding4;

  @NonNull
  public final Button buttonbuilding5;

  @NonNull
  public final Button buttonbuilding6;

  @NonNull
  public final Button buttonbuilding7;

  @NonNull
  public final Button buttonbuilding8A;

  @NonNull
  public final Button buttonbuilding8B;

  @NonNull
  public final Button buttonbuilding8C;

  @NonNull
  public final Button buttoncafeteria;

  @NonNull
  public final Button buttonclub;

  @NonNull
  public final Button buttonlibrary;

  @NonNull
  public final Button buttonstore;

  @NonNull
  public final ImageView locationIcon;

  @NonNull
  public final ImageView mapImageView;

  @NonNull
  public final TextView outOfBounds;

  @NonNull
  public final TextView pickPlace;

  private MapFragmentBinding(@NonNull ConstraintLayout rootView, @NonNull TextView addPlaceOnMap,
      @NonNull TextView btnBack, @NonNull Button buttonFichmanGate,
      @NonNull Button buttonGolombGate, @NonNull Button buttonHoffinGate,
      @NonNull Button buttonaguda, @NonNull Button buttonbuilding1, @NonNull Button buttonbuilding2,
      @NonNull Button buttonbuilding3A, @NonNull Button buttonbuilding3B,
      @NonNull Button buttonbuilding4, @NonNull Button buttonbuilding5,
      @NonNull Button buttonbuilding6, @NonNull Button buttonbuilding7,
      @NonNull Button buttonbuilding8A, @NonNull Button buttonbuilding8B,
      @NonNull Button buttonbuilding8C, @NonNull Button buttoncafeteria, @NonNull Button buttonclub,
      @NonNull Button buttonlibrary, @NonNull Button buttonstore, @NonNull ImageView locationIcon,
      @NonNull ImageView mapImageView, @NonNull TextView outOfBounds, @NonNull TextView pickPlace) {
    this.rootView = rootView;
    this.addPlaceOnMap = addPlaceOnMap;
    this.btnBack = btnBack;
    this.buttonFichmanGate = buttonFichmanGate;
    this.buttonGolombGate = buttonGolombGate;
    this.buttonHoffinGate = buttonHoffinGate;
    this.buttonaguda = buttonaguda;
    this.buttonbuilding1 = buttonbuilding1;
    this.buttonbuilding2 = buttonbuilding2;
    this.buttonbuilding3A = buttonbuilding3A;
    this.buttonbuilding3B = buttonbuilding3B;
    this.buttonbuilding4 = buttonbuilding4;
    this.buttonbuilding5 = buttonbuilding5;
    this.buttonbuilding6 = buttonbuilding6;
    this.buttonbuilding7 = buttonbuilding7;
    this.buttonbuilding8A = buttonbuilding8A;
    this.buttonbuilding8B = buttonbuilding8B;
    this.buttonbuilding8C = buttonbuilding8C;
    this.buttoncafeteria = buttoncafeteria;
    this.buttonclub = buttonclub;
    this.buttonlibrary = buttonlibrary;
    this.buttonstore = buttonstore;
    this.locationIcon = locationIcon;
    this.mapImageView = mapImageView;
    this.outOfBounds = outOfBounds;
    this.pickPlace = pickPlace;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MapFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MapFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.map_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MapFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_place_on_map;
      TextView addPlaceOnMap = ViewBindings.findChildViewById(rootView, id);
      if (addPlaceOnMap == null) {
        break missingId;
      }

      id = R.id.btnBack;
      TextView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.buttonFichmanGate;
      Button buttonFichmanGate = ViewBindings.findChildViewById(rootView, id);
      if (buttonFichmanGate == null) {
        break missingId;
      }

      id = R.id.buttonGolombGate;
      Button buttonGolombGate = ViewBindings.findChildViewById(rootView, id);
      if (buttonGolombGate == null) {
        break missingId;
      }

      id = R.id.buttonHoffinGate;
      Button buttonHoffinGate = ViewBindings.findChildViewById(rootView, id);
      if (buttonHoffinGate == null) {
        break missingId;
      }

      id = R.id.buttonaguda;
      Button buttonaguda = ViewBindings.findChildViewById(rootView, id);
      if (buttonaguda == null) {
        break missingId;
      }

      id = R.id.buttonbuilding1;
      Button buttonbuilding1 = ViewBindings.findChildViewById(rootView, id);
      if (buttonbuilding1 == null) {
        break missingId;
      }

      id = R.id.buttonbuilding2;
      Button buttonbuilding2 = ViewBindings.findChildViewById(rootView, id);
      if (buttonbuilding2 == null) {
        break missingId;
      }

      id = R.id.buttonbuilding3A;
      Button buttonbuilding3A = ViewBindings.findChildViewById(rootView, id);
      if (buttonbuilding3A == null) {
        break missingId;
      }

      id = R.id.buttonbuilding3B;
      Button buttonbuilding3B = ViewBindings.findChildViewById(rootView, id);
      if (buttonbuilding3B == null) {
        break missingId;
      }

      id = R.id.buttonbuilding4;
      Button buttonbuilding4 = ViewBindings.findChildViewById(rootView, id);
      if (buttonbuilding4 == null) {
        break missingId;
      }

      id = R.id.buttonbuilding5;
      Button buttonbuilding5 = ViewBindings.findChildViewById(rootView, id);
      if (buttonbuilding5 == null) {
        break missingId;
      }

      id = R.id.buttonbuilding6;
      Button buttonbuilding6 = ViewBindings.findChildViewById(rootView, id);
      if (buttonbuilding6 == null) {
        break missingId;
      }

      id = R.id.buttonbuilding7;
      Button buttonbuilding7 = ViewBindings.findChildViewById(rootView, id);
      if (buttonbuilding7 == null) {
        break missingId;
      }

      id = R.id.buttonbuilding8A;
      Button buttonbuilding8A = ViewBindings.findChildViewById(rootView, id);
      if (buttonbuilding8A == null) {
        break missingId;
      }

      id = R.id.buttonbuilding8B;
      Button buttonbuilding8B = ViewBindings.findChildViewById(rootView, id);
      if (buttonbuilding8B == null) {
        break missingId;
      }

      id = R.id.buttonbuilding8C;
      Button buttonbuilding8C = ViewBindings.findChildViewById(rootView, id);
      if (buttonbuilding8C == null) {
        break missingId;
      }

      id = R.id.buttoncafeteria;
      Button buttoncafeteria = ViewBindings.findChildViewById(rootView, id);
      if (buttoncafeteria == null) {
        break missingId;
      }

      id = R.id.buttonclub;
      Button buttonclub = ViewBindings.findChildViewById(rootView, id);
      if (buttonclub == null) {
        break missingId;
      }

      id = R.id.buttonlibrary;
      Button buttonlibrary = ViewBindings.findChildViewById(rootView, id);
      if (buttonlibrary == null) {
        break missingId;
      }

      id = R.id.buttonstore;
      Button buttonstore = ViewBindings.findChildViewById(rootView, id);
      if (buttonstore == null) {
        break missingId;
      }

      id = R.id.location_icon;
      ImageView locationIcon = ViewBindings.findChildViewById(rootView, id);
      if (locationIcon == null) {
        break missingId;
      }

      id = R.id.mapImageView;
      ImageView mapImageView = ViewBindings.findChildViewById(rootView, id);
      if (mapImageView == null) {
        break missingId;
      }

      id = R.id.outOfBounds;
      TextView outOfBounds = ViewBindings.findChildViewById(rootView, id);
      if (outOfBounds == null) {
        break missingId;
      }

      id = R.id.pick_place;
      TextView pickPlace = ViewBindings.findChildViewById(rootView, id);
      if (pickPlace == null) {
        break missingId;
      }

      return new MapFragmentBinding((ConstraintLayout) rootView, addPlaceOnMap, btnBack,
          buttonFichmanGate, buttonGolombGate, buttonHoffinGate, buttonaguda, buttonbuilding1,
          buttonbuilding2, buttonbuilding3A, buttonbuilding3B, buttonbuilding4, buttonbuilding5,
          buttonbuilding6, buttonbuilding7, buttonbuilding8A, buttonbuilding8B, buttonbuilding8C,
          buttoncafeteria, buttonclub, buttonlibrary, buttonstore, locationIcon, mapImageView,
          outOfBounds, pickPlace);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
