// Generated by view binder compiler. Do not edit!
package com.example.arnavigationapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.arnavigationapp.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddLocationBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView accuracy;

  @NonNull
  public final ImageView accuracyInfoIcon;

  @NonNull
  public final TextView accuracyInfoText;

  @NonNull
  public final CardView addToMapCardView;

  @NonNull
  public final TextView azimuthView;

  @NonNull
  public final Button btnAddToMap;

  @NonNull
  public final TextView btnBack;

  @NonNull
  public final Button btnDontAddToMap;

  @NonNull
  public final Button btnSavePlace;

  @NonNull
  public final LinearLayout buttonContainer;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextView coordText;

  @NonNull
  public final TextView coordinatesView;

  @NonNull
  public final TextInputLayout descriptionEditText;

  @NonNull
  public final TextView nameView;

  @NonNull
  public final TextView pickImgText;

  @NonNull
  public final TextInputLayout placeNameEditText;

  @NonNull
  public final ImageView resultImg;

  @NonNull
  public final TextView warningText;

  private AddLocationBinding(@NonNull ScrollView rootView, @NonNull TextView accuracy,
      @NonNull ImageView accuracyInfoIcon, @NonNull TextView accuracyInfoText,
      @NonNull CardView addToMapCardView, @NonNull TextView azimuthView,
      @NonNull Button btnAddToMap, @NonNull TextView btnBack, @NonNull Button btnDontAddToMap,
      @NonNull Button btnSavePlace, @NonNull LinearLayout buttonContainer,
      @NonNull CardView cardView, @NonNull TextView coordText, @NonNull TextView coordinatesView,
      @NonNull TextInputLayout descriptionEditText, @NonNull TextView nameView,
      @NonNull TextView pickImgText, @NonNull TextInputLayout placeNameEditText,
      @NonNull ImageView resultImg, @NonNull TextView warningText) {
    this.rootView = rootView;
    this.accuracy = accuracy;
    this.accuracyInfoIcon = accuracyInfoIcon;
    this.accuracyInfoText = accuracyInfoText;
    this.addToMapCardView = addToMapCardView;
    this.azimuthView = azimuthView;
    this.btnAddToMap = btnAddToMap;
    this.btnBack = btnBack;
    this.btnDontAddToMap = btnDontAddToMap;
    this.btnSavePlace = btnSavePlace;
    this.buttonContainer = buttonContainer;
    this.cardView = cardView;
    this.coordText = coordText;
    this.coordinatesView = coordinatesView;
    this.descriptionEditText = descriptionEditText;
    this.nameView = nameView;
    this.pickImgText = pickImgText;
    this.placeNameEditText = placeNameEditText;
    this.resultImg = resultImg;
    this.warningText = warningText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static AddLocationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_location, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddLocationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accuracy;
      TextView accuracy = ViewBindings.findChildViewById(rootView, id);
      if (accuracy == null) {
        break missingId;
      }

      id = R.id.accuracyInfoIcon;
      ImageView accuracyInfoIcon = ViewBindings.findChildViewById(rootView, id);
      if (accuracyInfoIcon == null) {
        break missingId;
      }

      id = R.id.accuracyInfoText;
      TextView accuracyInfoText = ViewBindings.findChildViewById(rootView, id);
      if (accuracyInfoText == null) {
        break missingId;
      }

      id = R.id.addToMapCardView;
      CardView addToMapCardView = ViewBindings.findChildViewById(rootView, id);
      if (addToMapCardView == null) {
        break missingId;
      }

      id = R.id.azimuthView;
      TextView azimuthView = ViewBindings.findChildViewById(rootView, id);
      if (azimuthView == null) {
        break missingId;
      }

      id = R.id.btnAddToMap;
      Button btnAddToMap = ViewBindings.findChildViewById(rootView, id);
      if (btnAddToMap == null) {
        break missingId;
      }

      id = R.id.btnBack;
      TextView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnDontAddToMap;
      Button btnDontAddToMap = ViewBindings.findChildViewById(rootView, id);
      if (btnDontAddToMap == null) {
        break missingId;
      }

      id = R.id.btnSavePlace;
      Button btnSavePlace = ViewBindings.findChildViewById(rootView, id);
      if (btnSavePlace == null) {
        break missingId;
      }

      id = R.id.buttonContainer;
      LinearLayout buttonContainer = ViewBindings.findChildViewById(rootView, id);
      if (buttonContainer == null) {
        break missingId;
      }

      id = R.id.card_view;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.coordText;
      TextView coordText = ViewBindings.findChildViewById(rootView, id);
      if (coordText == null) {
        break missingId;
      }

      id = R.id.coordinatesView;
      TextView coordinatesView = ViewBindings.findChildViewById(rootView, id);
      if (coordinatesView == null) {
        break missingId;
      }

      id = R.id.description_edit_text;
      TextInputLayout descriptionEditText = ViewBindings.findChildViewById(rootView, id);
      if (descriptionEditText == null) {
        break missingId;
      }

      id = R.id.nameView;
      TextView nameView = ViewBindings.findChildViewById(rootView, id);
      if (nameView == null) {
        break missingId;
      }

      id = R.id.pick_img_text;
      TextView pickImgText = ViewBindings.findChildViewById(rootView, id);
      if (pickImgText == null) {
        break missingId;
      }

      id = R.id.place_name_edit_text;
      TextInputLayout placeNameEditText = ViewBindings.findChildViewById(rootView, id);
      if (placeNameEditText == null) {
        break missingId;
      }

      id = R.id.result_img;
      ImageView resultImg = ViewBindings.findChildViewById(rootView, id);
      if (resultImg == null) {
        break missingId;
      }

      id = R.id.warning_text;
      TextView warningText = ViewBindings.findChildViewById(rootView, id);
      if (warningText == null) {
        break missingId;
      }

      return new AddLocationBinding((ScrollView) rootView, accuracy, accuracyInfoIcon,
          accuracyInfoText, addToMapCardView, azimuthView, btnAddToMap, btnBack, btnDontAddToMap,
          btnSavePlace, buttonContainer, cardView, coordText, coordinatesView, descriptionEditText,
          nameView, pickImgText, placeNameEditText, resultImg, warningText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
