// Generated by view binder compiler. Do not edit!
package com.example.arnavigationapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.arnavigationapp.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AllLocationsLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView btnBack;

  @NonNull
  public final Button btnCancleDelete;

  @NonNull
  public final Button btnConfirmDelete;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final CardView confirmDeleteCardView;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextInputEditText searchEditText;

  @NonNull
  public final TextInputLayout searchEditTextLayout;

  @NonNull
  public final TextView warningText;

  private AllLocationsLayoutBinding(@NonNull ConstraintLayout rootView, @NonNull TextView btnBack,
      @NonNull Button btnCancleDelete, @NonNull Button btnConfirmDelete, @NonNull CardView cardView,
      @NonNull CardView confirmDeleteCardView, @NonNull ImageView imageView,
      @NonNull RecyclerView recyclerView, @NonNull TextInputEditText searchEditText,
      @NonNull TextInputLayout searchEditTextLayout, @NonNull TextView warningText) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnCancleDelete = btnCancleDelete;
    this.btnConfirmDelete = btnConfirmDelete;
    this.cardView = cardView;
    this.confirmDeleteCardView = confirmDeleteCardView;
    this.imageView = imageView;
    this.recyclerView = recyclerView;
    this.searchEditText = searchEditText;
    this.searchEditTextLayout = searchEditTextLayout;
    this.warningText = warningText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AllLocationsLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AllLocationsLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.all_locations_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AllLocationsLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      TextView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnCancleDelete;
      Button btnCancleDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnCancleDelete == null) {
        break missingId;
      }

      id = R.id.btnConfirmDelete;
      Button btnConfirmDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnConfirmDelete == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.confirmDeleteCardView;
      CardView confirmDeleteCardView = ViewBindings.findChildViewById(rootView, id);
      if (confirmDeleteCardView == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.searchEditText;
      TextInputEditText searchEditText = ViewBindings.findChildViewById(rootView, id);
      if (searchEditText == null) {
        break missingId;
      }

      id = R.id.searchEditTextLayout;
      TextInputLayout searchEditTextLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchEditTextLayout == null) {
        break missingId;
      }

      id = R.id.warning_text;
      TextView warningText = ViewBindings.findChildViewById(rootView, id);
      if (warningText == null) {
        break missingId;
      }

      return new AllLocationsLayoutBinding((ConstraintLayout) rootView, btnBack, btnCancleDelete,
          btnConfirmDelete, cardView, confirmDeleteCardView, imageView, recyclerView,
          searchEditText, searchEditTextLayout, warningText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
